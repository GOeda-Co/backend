basePath: /
definitions:
  github_com_tomatoCoderq_repeatro_pkg_models.AdminCheckResponse:
    properties:
      is_admin:
        type: boolean
    type: object
  github_com_tomatoCoderq_repeatro_pkg_models.Card:
    properties:
      card_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deck_id:
        type: string
      easiness:
        type: number
      expires_at:
        type: string
      interval:
        type: integer
      repetition_number:
        type: integer
      tags:
        items:
          type: string
        type: array
      translation:
        type: string
      updated_at:
        type: string
      word:
        type: string
    type: object
  github_com_tomatoCoderq_repeatro_pkg_models.Deck:
    properties:
      cards:
        items:
          $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card'
        type: array
      cards_quantity:
        type: integer
      created_at:
        type: string
      created_by:
        type: string
      deck_id:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  github_com_tomatoCoderq_repeatro_pkg_models.LoginResponse:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
  github_com_tomatoCoderq_repeatro_pkg_models.RegisterResponse:
    properties:
      message:
        type: string
      user_id:
        type: string
    type: object
  github_com_tomatoCoderq_repeatro_pkg_schemes.AnswerScheme:
    properties:
      card_id:
        type: string
      grade:
        type: integer
    type: object
  github_com_tomatoCoderq_repeatro_pkg_schemes.LoginScheme:
    properties:
      app_id:
        type: integer
      email:
        type: string
      password:
        maxLength: 64
        minLength: 5
        type: string
    required:
    - app_id
    - email
    - password
    type: object
  github_com_tomatoCoderq_repeatro_pkg_schemes.RegisterScheme:
    properties:
      email:
        type: string
      name:
        maxLength: 128
        type: string
      password:
        maxLength: 64
        minLength: 5
        type: string
    required:
    - email
    - name
    - password
    type: object
  github_com_tomatoCoderq_repeatro_pkg_schemes.UpdateCardScheme:
    properties:
      easiness:
        type: number
      expires_at:
        type: string
      interval:
        type: integer
      repetition_number:
        type: integer
      tags:
        items:
          type: string
        type: array
      translation:
        type: string
      updated_at:
        type: string
      word:
        type: string
    type: object
  statsv1.GetAverageGradeResponse:
    properties:
      average_grade:
        type: number
    type: object
  statsv1.GetCardsReviewedCountResponse:
    properties:
      reviewed_count:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: xasanFN@mail.ru
    name: khasan
    url: https://t.me/tomatocoder
  description: Repeatro Swagger describes all endpoints.
  title: Repeatro
  version: "1.0"
paths:
  /answers:
    post:
      consumes:
      - application/json
      description: Submit answers to cards
      parameters:
      - description: List of answers
        in: body
        name: answers
        required: true
        schema:
          items:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_schemes.AnswerScheme'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Submit answers
      tags:
      - answers
  /card/{id}:
    delete:
      description: Delete a card by ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a card
      tags:
      - cards
    put:
      consumes:
      - application/json
      description: Update a card's content by ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated card data
        in: body
        name: card
        required: true
        schema:
          $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_schemes.UpdateCardScheme'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a card
      tags:
      - cards
  /cards:
    get:
      description: Retrieves all cards for the authenticated user. Admins can access
        cards of other users by providing user_id query parameter
      parameters:
      - description: User ID (admin only)
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card'
            type: array
        "400":
          description: Bad Request - Invalid user_id format
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "403":
          description: Forbidden - User without admin rights cannot access other users'
            cards
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to get user ID or retrieve cards
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Get all cards
      tags:
      - cards
    post:
      consumes:
      - application/json
      description: Add a new card for the authenticated user
      parameters:
      - description: Card to add
        in: body
        name: card
        required: true
        schema:
          $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card'
        "500":
          description: Internal Server Error - Failed to read request body, get user
            ID, or add card
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Add a card
      tags:
      - cards
  /cards/learn:
    get:
      description: Retrieves all cards assigned to the user for learning
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card'
            type: array
        "500":
          description: Internal Server Error - Failed to get user ID or retrieve cards
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Get all cards to learn
      tags:
      - cards
  /deck:
    post:
      consumes:
      - application/json
      description: Create a new deck
      parameters:
      - description: Deck to add
        in: body
        name: deck
        required: true
        schema:
          $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Deck'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Deck'
        "400":
          description: Bad Request - Invalid request body
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to get user ID or add deck
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Add a deck
      tags:
      - decks
  /deck/{deck_id}/card/{card_id}:
    post:
      description: Add a card to a specific deck
      parameters:
      - description: Card ID
        in: path
        name: card_id
        required: true
        type: string
      - description: Deck ID
        in: path
        name: deck_id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request - Invalid card ID or deck ID format
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to add card to deck
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Add card to deck
      tags:
      - decks
  /deck/{id}:
    delete:
      description: Delete a deck by ID
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request - Invalid deck ID format
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to delete deck
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Delete a deck
      tags:
      - decks
    get:
      description: Retrieves a deck by its ID
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Deck'
        "400":
          description: Bad Request - Invalid deck ID format
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to read deck
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Get deck by ID
      tags:
      - decks
  /deck/{id}/cards:
    get:
      description: Retrieve all cards from a specific deck
      parameters:
      - description: Deck ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card'
            type: array
        "400":
          description: Bad Request - Invalid deck ID format
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to get cards from deck
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Get cards from deck
      tags:
      - decks
  /decks:
    get:
      description: Retrieves all decks in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Deck'
            type: array
        "500":
          description: Internal Server Error - Failed to retrieve decks
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Get all decks
      tags:
      - decks
  /is-admin:
    get:
      consumes:
      - application/json
      description: Verifies if the user has admin privileges
      parameters:
      - description: ID of user
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Admin status check result
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.AdminCheckResponse'
        "400":
          description: Bad Request - user_id is required or invalid format
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to check admin status
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Checks if user is admin
      tags:
      - sso
  /login:
    post:
      consumes:
      - application/json
      description: Logs in a user and returns a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_schemes.LoginScheme'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.LoginResponse'
        "400":
          description: Bad Request - Invalid request body
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to login user
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Logs in a user
      tags:
      - sso
  /register:
    post:
      consumes:
      - application/json
      description: Register by email, name, and password, getting user_id
      parameters:
      - description: Registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_schemes.RegisterScheme'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.RegisterResponse'
        "400":
          description: Bad Request - Invalid request body
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to register user
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Registers new user to the system
      tags:
      - sso
  /stats/average:
    get:
      description: Returns the average grade for the current user for the daily time
        range
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statsv1.GetAverageGradeResponse'
        "400":
          description: Bad Request - Failed to get user ID from context
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to get average grade
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Get user's average grade
      tags:
      - statistics
  /stats/count:
    get:
      description: Returns the count of cards reviewed by the current user for the
        daily time range
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statsv1.GetCardsReviewedCountResponse'
        "400":
          description: Bad Request - Failed to get user ID from context
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to get reviewed cards
          schema:
            $ref: '#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse'
      summary: Get user's cards reviewed count
      tags:
      - statistics
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
