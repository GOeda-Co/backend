{
    "swagger": "2.0",
    "info": {
        "description": "Repeatro Swagger describes all endpoints.",
        "title": "Repeatro",
        "contact": {
            "name": "khasan",
            "url": "https://t.me/tomatocoder",
            "email": "xasanFN@mail.ru"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/answers": {
            "post": {
                "description": "Submit answers to cards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "answers"
                ],
                "summary": "Submit answers",
                "parameters": [
                    {
                        "description": "List of answers",
                        "name": "answers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_schemes.AnswerScheme"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/card/{id}": {
            "put": {
                "description": "Update a card's content by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Update a card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated card data",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_schemes.UpdateCardScheme"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a card by ID",
                "tags": [
                    "cards"
                ],
                "summary": "Delete a card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cards": {
            "get": {
                "description": "Retrieves all cards for the authenticated user. Admins can access cards of other users by providing user_id query parameter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Get all cards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (admin only)",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid user_id format",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - User without admin rights cannot access other users' cards",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to get user ID or retrieve cards",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new card for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Add a card",
                "parameters": [
                    {
                        "description": "Card to add",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to read request body, get user ID, or add card",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cards/learn": {
            "get": {
                "description": "Retrieves all cards assigned to the user for learning",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Get all cards to learn",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to get user ID or retrieve cards",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deck": {
            "post": {
                "description": "Create a new deck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decks"
                ],
                "summary": "Add a deck",
                "parameters": [
                    {
                        "description": "Deck to add",
                        "name": "deck",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Deck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Deck"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to get user ID or add deck",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deck/{deck_id}/card/{card_id}": {
            "post": {
                "description": "Add a card to a specific deck",
                "tags": [
                    "decks"
                ],
                "summary": "Add card to deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "card_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "deck_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request - Invalid card ID or deck ID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to add card to deck",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deck/{id}": {
            "get": {
                "description": "Retrieves a deck by its ID",
                "tags": [
                    "decks"
                ],
                "summary": "Get deck by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Deck"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid deck ID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to read deck",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a deck by ID",
                "tags": [
                    "decks"
                ],
                "summary": "Delete a deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request - Invalid deck ID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to delete deck",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deck/{id}/cards": {
            "get": {
                "description": "Retrieve all cards from a specific deck",
                "tags": [
                    "decks"
                ],
                "summary": "Get cards from deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid deck ID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to get cards from deck",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/decks": {
            "get": {
                "description": "Retrieves all decks in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decks"
                ],
                "summary": "Get all decks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Deck"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to retrieve decks",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/is-admin": {
            "get": {
                "description": "Verifies if the user has admin privileges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sso"
                ],
                "summary": "Checks if user is admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of user",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin status check result",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.AdminCheckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - user_id is required or invalid format",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to check admin status",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logs in a user and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sso"
                ],
                "summary": "Logs in a user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_schemes.LoginScheme"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to login user",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register by email, name, and password, getting user_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sso"
                ],
                "summary": "Registers new user to the system",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_schemes.RegisterScheme"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to register user",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/average": {
            "get": {
                "description": "Returns the average grade for the current user for the daily time range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get user's average grade",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statsv1.GetAverageGradeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Failed to get user ID from context",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to get average grade",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/count": {
            "get": {
                "description": "Returns the count of cards reviewed by the current user for the daily time range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get user's cards reviewed count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statsv1.GetCardsReviewedCountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Failed to get user ID from context",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to get reviewed cards",
                        "schema": {
                            "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_tomatoCoderq_repeatro_pkg_models.AdminCheckResponse": {
            "type": "object",
            "properties": {
                "is_admin": {
                    "type": "boolean"
                }
            }
        },
        "github_com_tomatoCoderq_repeatro_pkg_models.Card": {
            "type": "object",
            "properties": {
                "card_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "deck_id": {
                    "type": "string"
                },
                "easiness": {
                    "type": "number"
                },
                "expires_at": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "repetition_number": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "translation": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "github_com_tomatoCoderq_repeatro_pkg_models.Deck": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tomatoCoderq_repeatro_pkg_models.Card"
                    }
                },
                "cards_quantity": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "deck_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_tomatoCoderq_repeatro_pkg_models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_tomatoCoderq_repeatro_pkg_models.LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_tomatoCoderq_repeatro_pkg_models.RegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_tomatoCoderq_repeatro_pkg_schemes.AnswerScheme": {
            "type": "object",
            "properties": {
                "card_id": {
                    "type": "string"
                },
                "grade": {
                    "type": "integer"
                }
            }
        },
        "github_com_tomatoCoderq_repeatro_pkg_schemes.LoginScheme": {
            "type": "object",
            "required": [
                "app_id",
                "email",
                "password"
            ],
            "properties": {
                "app_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 5
                }
            }
        },
        "github_com_tomatoCoderq_repeatro_pkg_schemes.RegisterScheme": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 128
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 5
                }
            }
        },
        "github_com_tomatoCoderq_repeatro_pkg_schemes.UpdateCardScheme": {
            "type": "object",
            "properties": {
                "easiness": {
                    "type": "number"
                },
                "expires_at": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "repetition_number": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "translation": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "statsv1.GetAverageGradeResponse": {
            "type": "object",
            "properties": {
                "average_grade": {
                    "type": "number"
                }
            }
        },
        "statsv1.GetCardsReviewedCountResponse": {
            "type": "object",
            "properties": {
                "reviewed_count": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}